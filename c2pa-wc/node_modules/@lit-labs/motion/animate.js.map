{"version":3,"file":"animate.js","sources":["src/animate.ts"],"sourcesContent":["import {LitElement, ReactiveControllerHost} from 'lit';\nimport {nothing, AttributePart} from 'lit/html.js';\nimport {directive, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {controllerMap} from './animate-controller.js';\nexport {AnimateController} from './animate-controller.js';\n\nexport type CSSValues = {\n  [index: string]: string | number;\n};\n\nexport type CSSPropertiesList = string[];\n\n// zIndex for \"in\" animations\nlet z = 0;\n\nconst disconnectedProps: Map<unknown, CSSValues> = new Map();\nconst renderedHosts: WeakSet<ReactiveControllerHost> = new WeakSet();\n\nexport type Options = {\n  // Options used for the animation\n  keyframeOptions?: KeyframeAnimationOptions;\n  // List of css properties to animate\n  properties?: CSSPropertiesList;\n  // if `true`, the `animate` is disabled\n  disabled?: boolean;\n  // Callback run to produce a value which is dirty checked to determine if animation should run.\n  guard?: () => unknown;\n  // Id for this `animate`; used to link to other `animate`s via e.g. `inId`\n  id?: unknown;\n  // Set to the `animate` id to map to when rendering \"in\"\n  inId?: unknown;\n  // Keyframes to use when animating \"in\"\n  in?: Keyframe[];\n  // Keyframes to use when animating \"out\"\n  out?: Keyframe[];\n  // Set to true to match DOM position when animating \"out\"\n  stabilizeOut?: boolean;\n  // Skips animation when initially rendering\n  skipInitial?: boolean;\n  // Callback run when the `animate` animation starts\n  onStart?: (animate: Animate) => void;\n  // Callback run when the animation is complete\n  onComplete?: (animate: Animate) => void;\n  // Callback run to modify frames used to animate\n  onFrames?: (animate: Animate) => Keyframe[] | undefined;\n};\n\nexport const animationFrame = () =>\n  new Promise((resolve) => requestAnimationFrame(resolve));\n\n// Presets for animating \"in\" and \"out\" of the DOM.\nexport const flyBelow = [{transform: 'translateY(100%) scale(0)', opacity: 0}];\nexport const flyAbove = [{transform: 'translateY(-100%) scale(0)', opacity: 0}];\nexport const flyLeft = [{transform: 'translateX(-100%) scale(0)', opacity: 0}];\nexport const flyRight = [{transform: 'translateX(100%) scale(0)', opacity: 0}];\nexport const none = [{}];\nexport const fadeOut = [{opacity: 0}];\nexport const fade = fadeOut;\nexport const fadeIn = [{opacity: 0}, {opacity: 1}];\nexport const fadeInSlow = [\n  {opacity: 0},\n  {opacity: 0.25, offset: 0.75},\n  {opacity: 1},\n];\n\nconst diffOp = (a: number, b: number) => {\n  const v = a - b;\n  return v === 0 ? undefined : v;\n};\nconst quotientOp = (a: number, b: number) => {\n  const v = a / b;\n  return v === 1 ? undefined : v;\n};\n\n// Computes a transform given a before and after input for given properties.\nexport const transformProps = {\n  left: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    return {value, transform: value && `translateX(${value}px)`};\n  },\n  top: (a: number, b: number) => {\n    const value = diffOp(a, b);\n    return {value, transform: value && `translateY(${value}px)`};\n  },\n  width: (a: number, b: number) => {\n    const value = quotientOp(a, b);\n    return {value, transform: value && `scaleX(${value})`};\n  },\n  height: (a: number, b: number) => {\n    const value = quotientOp(a, b);\n    return {value, transform: value && `scaleY(${value})`};\n  },\n};\n\nexport const defaultKeyframeOptions: KeyframeAnimationOptions = {\n  duration: 333,\n  easing: `ease-in-out`,\n};\n\nexport const defaultCssProperties: CSSPropertiesList = [\n  'left',\n  'top',\n  'width',\n  'height',\n  'opacity',\n  'color',\n  'background',\n];\n\n// Dirty checks the value received from the `guard` option.\nconst isDirty = (value: unknown, previous: unknown) => {\n  if (Array.isArray(value)) {\n    // Dirty-check arrays by item\n    if (\n      Array.isArray(previous) &&\n      previous.length === value.length &&\n      value.every((v, i) => v === (previous as Array<unknown>)[i])\n    ) {\n      return false;\n    }\n  } else if (previous === value) {\n    // Dirty-check non-arrays by identity\n    return false;\n  }\n  return true;\n};\n\n// Mapping of node on which the `animate` directive is used to the `animate` directive.\n// Used to get the ancestor `animate` animations (which are used to modify\n// `animate` transforms), done by ascending the DOM.\nconst nodeToAnimateMap: WeakMap<Node, Animate> = new WeakMap();\n\n/**\n * `animate` directive class. Animates a node's position between renders.\n */\nexport class Animate extends AsyncDirective {\n  private _host?: LitElement;\n  private _fromValues?: CSSValues;\n  private _parentNode: Element | null = null;\n  private _nextSibling: Node | null = null;\n  private _shouldAnimate = true;\n  private _previousValue: unknown;\n  private _styles?: string | undefined | null;\n  element!: HTMLElement;\n\n  shouldLog = false;\n  animatingProperties?: CSSValues;\n  frames?: Keyframe[];\n  webAnimation?: Animation;\n  options!: Options;\n  optionsOrCallback?: (() => Options) | Options;\n\n  finished!: Promise<void>;\n  private _resolveFinished?: () => void;\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type === PartType.CHILD) {\n      throw new Error(\n        'The `animate` directive must be used in attribute position.'\n      );\n    }\n    this.createFinished();\n  }\n\n  createFinished() {\n    this.resolveFinished?.();\n    this.finished = new Promise((r) => {\n      this._resolveFinished = r;\n    });\n  }\n\n  async resolveFinished() {\n    this._resolveFinished?.();\n    this._resolveFinished = undefined;\n  }\n\n  render(_options?: (() => Options) | Options) {\n    return nothing;\n  }\n\n  getController() {\n    return controllerMap.get(this._host!);\n  }\n\n  isDisabled() {\n    return this.options.disabled || this.getController()?.disabled;\n  }\n\n  override update(part: AttributePart, [options]: Parameters<this['render']>) {\n    const firstUpdate = this._host === undefined;\n    if (firstUpdate) {\n      this._host = part.options?.host as LitElement;\n      this._host.addController(this);\n      this.element = part.element;\n      nodeToAnimateMap.set(this.element, this);\n    }\n    this.optionsOrCallback = options;\n    if (firstUpdate || typeof options !== 'function') {\n      this._setOptions(options as Options);\n    }\n    return this.render(options);\n  }\n\n  // TODO(sorvell): instead of a function/object, just use an object that the\n  // user can mutate and create accessors for the data that do lookups as needed.\n  // We're doing this every hostUpdate anyway and these lookups are fast.\n  private _setOptions(options?: Options) {\n    options = options ?? {};\n    // Mixin controller options.\n    const controller = this.getController();\n    if (controller !== undefined) {\n      options = {\n        ...controller.defaultOptions,\n        ...options,\n      };\n      options.keyframeOptions = {\n        ...controller.defaultOptions.keyframeOptions,\n        ...options.keyframeOptions,\n      };\n    }\n    // Ensure there are some properties to animation and some animation options.\n    options!.properties ??= defaultCssProperties;\n    this.options = options;\n  }\n\n  // Measures and returns metrics for the element's bounding box and styling\n  private _measure() {\n    const props: CSSValues = {};\n    const bounds = this.element.getBoundingClientRect();\n    const computedStyle = getComputedStyle(this.element);\n    this.options.properties!.forEach((p) => {\n      const v =\n        bounds[p as keyof typeof bounds] ??\n        (!transformProps[p as keyof typeof transformProps]\n          ? computedStyle[p as keyof CSSStyleDeclaration]\n          : undefined);\n      const asNum = Number(v);\n      props[p] = isNaN(asNum) ? String(v) : asNum;\n    });\n    return props;\n  }\n\n  // Returns true if a `animate` should be started.\n  private _canStart() {\n    let dirty = true,\n      value = undefined;\n    if (this.options.guard) {\n      value = this.options.guard();\n      dirty = isDirty(value, this._previousValue);\n    }\n    this._shouldAnimate =\n      this._host!.hasUpdated &&\n      !this.isDisabled() &&\n      !this.isAnimating() &&\n      dirty &&\n      this.element.isConnected;\n    if (this._shouldAnimate) {\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    }\n    return this._shouldAnimate;\n  }\n\n  hostUpdate() {\n    // TODO(sorvell): If options will change that will affect measuring,\n    // then the user must pass a callback which can be called at update time.\n    if (typeof this.optionsOrCallback === 'function') {\n      this._setOptions(this.optionsOrCallback());\n    }\n    if (this._canStart()) {\n      this._fromValues = this._measure();\n      // Record parent and nextSibling used to re-attach node when animating \"out\"\n      this._parentNode =\n        this._parentNode ?? (this.element.parentNode as Element);\n      this._nextSibling = this.element.nextSibling;\n    }\n  }\n\n  async hostUpdated() {\n    if (\n      !this._shouldAnimate ||\n      !this.element.isConnected ||\n      (this.options.skipInitial && !this.isHostRendered)\n    ) {\n      return;\n    }\n    this.prepare();\n    // Wait for rendering so any sub-elements have a chance to render.\n    await animationFrame;\n    let frames: Keyframe[] | undefined;\n    const ancestors = this._getAncestors();\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const animationOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions,\n      ancestors\n    );\n    const toValues = this._measure();\n    // Normal or inverse scale\n    if (this._fromValues !== undefined) {\n      const {from, to} = this._applyAncestorAdjustments(\n        this._fromValues,\n        toValues,\n        ancestors\n      );\n      this.log('measured', [this._fromValues, toValues, from, to]);\n      frames = this.calculateKeyframes(from, to);\n      // \"In\" `animate`.\n    } else {\n      const disconnected = disconnectedProps.get(this.options.inId);\n      if (disconnected) {\n        // use disconnected data only once.\n        disconnectedProps.delete(this.options.inId);\n        const {from, to} = this._applyAncestorAdjustments(\n          disconnected!,\n          toValues,\n          ancestors\n        );\n        frames = this.calculateKeyframes(from, to);\n        // \"merge\" with \"in\" frames\n        frames = this.options.in\n          ? [\n              {...this.options.in[0], ...frames![0]},\n              ...this.options.in.slice(1),\n              frames![1],\n            ]\n          : frames;\n        // adjust z so always on top...\n        z++;\n        frames!.forEach((f) => (f.zIndex = z));\n      } else if (this.options.in) {\n        frames = [...this.options.in, {}];\n      }\n    }\n    this.animate(frames, animationOptions);\n  }\n\n  resetStyles() {\n    if (this._styles !== undefined) {\n      this.element.setAttribute('style', this._styles ?? '');\n      this._styles = undefined;\n    }\n  }\n\n  commitStyles() {\n    this._styles = this.element.getAttribute('style');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.webAnimation as any)?.commitStyles();\n    this.webAnimation?.cancel();\n  }\n\n  override reconnected() {}\n\n  // Experimental animate out functionality.\n  override async disconnected() {\n    if (!this._shouldAnimate) {\n      return;\n    }\n    if (this.options.id !== undefined) {\n      disconnectedProps.set(this.options.id, this._fromValues!);\n    }\n    if (this.options.out === undefined) {\n      return;\n    }\n    this.prepare();\n    await animationFrame();\n    if (this._parentNode?.isConnected) {\n      // put element back in DOM\n      const ref =\n        this._nextSibling && this._nextSibling.parentNode === this._parentNode\n          ? this._nextSibling\n          : null;\n      this._parentNode.insertBefore(this.element, ref);\n      // Optionally move element back to its position before it was detached.\n      if (this.options.stabilizeOut) {\n        // Measure current position after re-attaching.\n        const shifted = this._measure();\n        this.log('stabilizing out');\n        // TODO(sorvell): these nudges could conflict with existing styling\n        // or animation but setting left/top should be rare, especially via\n        // animation.\n        const left =\n          (this._fromValues!.left as number) - (shifted.left as number);\n        const top = (this._fromValues!.top as number) - (shifted.top as number);\n        const isStatic = getComputedStyle(this.element).position === 'static';\n        if (isStatic && (left !== 0 || top !== 0)) {\n          this.element.style.position = 'relative';\n        }\n        if (left !== 0) {\n          this.element.style.left = left + 'px';\n        }\n        if (top !== 0) {\n          this.element.style.top = top + 'px';\n        }\n      }\n    }\n    // These inherit from ancestors. This allows easier synchronization of\n    // child `animate`s within ancestor `animate`s.\n    const keyframeOptions = this._calculateKeyframeOptions(\n      this.options.keyframeOptions\n    );\n    await this.animate(this.options.out, keyframeOptions);\n    this.element.remove();\n  }\n\n  prepare() {\n    this.createFinished();\n  }\n\n  start() {\n    this.options.onStart?.(this);\n  }\n\n  didFinish(didAnimate: boolean) {\n    if (didAnimate) {\n      this.options.onComplete?.(this);\n    }\n    this._fromValues = undefined;\n    this.animatingProperties = undefined;\n    this.frames = undefined;\n    this.resolveFinished();\n  }\n\n  private _getAncestors() {\n    const ancestors = [];\n    for (\n      let p: Node | null | undefined = this.element.parentNode;\n      p;\n      p = p?.parentNode\n    ) {\n      const a = nodeToAnimateMap.get(p!);\n      if (a && !a.isDisabled() && a) {\n        ancestors.push(a);\n      }\n    }\n    return ancestors;\n  }\n\n  protected get isHostRendered() {\n    const hostRendered = renderedHosts.has(this._host!);\n    if (!hostRendered) {\n      this._host!.updateComplete.then(() => {\n        renderedHosts.add(this._host!);\n      });\n    }\n    return hostRendered;\n  }\n\n  private _calculateKeyframeOptions(\n    options: KeyframeAnimationOptions | undefined,\n    ancestors: Animate[] = this._getAncestors()\n  ) {\n    // merges this `animate`'s options over ancestor options over defaults\n    const keyframeOptions = {...defaultKeyframeOptions};\n    ancestors.forEach((a) =>\n      Object.assign(keyframeOptions, a.options.keyframeOptions)\n    );\n    Object.assign(keyframeOptions, options);\n    return keyframeOptions;\n  }\n\n  // Adjust position based on ancestor scaling.\n  private _applyAncestorAdjustments(\n    from: CSSValues,\n    to: CSSValues,\n    ancestors: Animate[]\n  ) {\n    from = {...from};\n    to = {...to};\n    const ancestorProps = ancestors\n      .map((a) => a.animatingProperties)\n      .filter((a) => a !== undefined) as CSSValues[];\n    let dScaleX = 1;\n    let dScaleY = 1;\n    if (ancestorProps !== undefined) {\n      // gather scaling data for ancestors\n      ancestorProps.forEach((a) => {\n        if (a.width) {\n          dScaleX = dScaleX / (a.width as number);\n        }\n        if (a.height) {\n          dScaleY = dScaleY / (a.height as number);\n        }\n      });\n      // Move position by ancestor scaling amount.\n      if (from.left !== undefined && to.left !== undefined) {\n        from.left = dScaleX * (from.left as number);\n        to.left = dScaleX * (to.left as number);\n      }\n      if (from.top !== undefined && to.top !== undefined) {\n        from.top = dScaleY * (from.top as number);\n        to.top = dScaleY * (to.top as number);\n      }\n    }\n    return {from, to};\n  }\n\n  protected calculateKeyframes(from: CSSValues, to: CSSValues, center = false) {\n    const fromFrame: Keyframe = {};\n    const toFrame: Keyframe = {};\n    let hasFrames = false;\n    const props: CSSValues = {};\n    for (const p in to) {\n      const f = from[p],\n        t = to[p];\n      if (p in transformProps) {\n        const tp = transformProps[p as keyof typeof transformProps];\n        if (f === undefined || t === undefined) {\n          continue;\n        }\n        const op = tp(f as number, t as number);\n        if (op.transform !== undefined) {\n          props[p] = op.value!;\n          hasFrames = true;\n          fromFrame.transform = `${fromFrame.transform ?? ''} ${op.transform}`;\n        }\n      } else if (f !== t && f !== undefined && t !== undefined) {\n        hasFrames = true;\n        fromFrame[p] = f;\n        toFrame[p] = t;\n      }\n    }\n    fromFrame.transformOrigin = toFrame.transformOrigin = center\n      ? 'center center'\n      : 'top left';\n    this.animatingProperties = props;\n    return hasFrames ? [fromFrame, toFrame] : undefined;\n  }\n\n  protected async animate(\n    frames: Keyframe[] | undefined,\n    options = this.options.keyframeOptions\n  ) {\n    this.start();\n    this.frames = frames;\n    let didAnimate = false;\n    if (!this.isAnimating() && !this.isDisabled()) {\n      if (this.options.onFrames) {\n        this.frames = frames = this.options.onFrames(this);\n        this.log('modified frames', frames);\n      }\n      if (frames !== undefined) {\n        this.log('animate', [frames, options]);\n        didAnimate = true;\n        this.webAnimation = this.element.animate(frames, options);\n        const controller = this.getController();\n        controller?.add(this);\n        try {\n          await this.webAnimation.finished;\n        } catch (e) {\n          // cancelled.\n        }\n        controller?.remove(this);\n      }\n    }\n    this.didFinish(didAnimate);\n    return didAnimate;\n  }\n\n  protected isAnimating() {\n    return (\n      this.webAnimation?.playState === 'running' || this.webAnimation?.pending\n    );\n  }\n\n  log(message: string, data?: unknown) {\n    if (this.shouldLog && !this.isDisabled()) {\n      console.log(message, this.options.id, data);\n    }\n  }\n}\n\n/**\n * The `animate` directive animates a node's layout between renders.\n * It will perform a \"tweening\" animation between the two states based on\n * the options given. In addition, elements can animate when they initially\n * render to DOM and when they are removed.\n *\n * Options include:\n * * animationOptions:  configure animation via standard KeyframeAnimationOptions\n * * properties: list of properties to animate, defaults to\n * ['left', 'top','width', 'height', 'opacity', 'color', 'background']\n * * disabled: disables animation\n * * guard: function producing values that must change for the `animate` to run\n * * in: keyframes to use when animating in\n * * out: keyframes to use when animating out\n * * skipInitial: skip animating in the first time\n * * id: used to link to other `animate`s via `inId`\n * * inId: id of the `animate` to render from when animating in\n * * onStart: run when the `animate` starts\n * * onComplete: run when the `animate` completes\n * * onFrames: run when the frames are produces, use to modify frames\n */\nexport const animate = directive(Animate);\n"],"names":["z","disconnectedProps","Map","renderedHosts","WeakSet","animationFrame","Promise","resolve","requestAnimationFrame","flyBelow","transform","opacity","flyAbove","flyLeft","flyRight","none","fadeOut","fade","fadeIn","fadeInSlow","offset","diffOp","a","b","v","undefined","quotientOp","transformProps","left","value","top","width","height","defaultKeyframeOptions","duration","easing","defaultCssProperties","nodeToAnimateMap","WeakMap","Animate","AsyncDirective","constructor","part","super","this","type","PartType","CHILD","Error","createFinished","resolveFinished","finished","r","_resolveFinished","async","render","_options","nothing","getController","controllerMap","get","_host","isDisabled","options","disabled","update","firstUpdate","host","addController","element","set","optionsOrCallback","_setOptions","controller","defaultOptions","keyframeOptions","properties","_measure","props","bounds","getBoundingClientRect","computedStyle","getComputedStyle","forEach","p","asNum","Number","isNaN","String","_canStart","dirty","guard","previous","Array","isArray","length","every","i","isDirty","_previousValue","_shouldAnimate","hasUpdated","isAnimating","isConnected","from","hostUpdate","_fromValues","_parentNode","parentNode","_nextSibling","nextSibling","skipInitial","isHostRendered","frames","prepare","ancestors","_getAncestors","animationOptions","_calculateKeyframeOptions","toValues","to","_applyAncestorAdjustments","log","calculateKeyframes","disconnected","inId","delete","in","slice","f","zIndex","animate","resetStyles","_styles","setAttribute","commitStyles","getAttribute","webAnimation","cancel","reconnected","id","out","ref","insertBefore","stabilizeOut","shifted","position","style","remove","start","onStart","didFinish","didAnimate","onComplete","animatingProperties","push","hostRendered","has","updateComplete","then","add","Object","assign","ancestorProps","map","filter","dScaleX","dScaleY","center","fromFrame","toFrame","hasFrames","t","tp","op","transformOrigin","onFrames","e","playState","pending","message","data","shouldLog","console","directive"],"mappings":"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"}