{"version":3,"file":"Logging.js","sourceRoot":"","sources":["../../src/utilities/Logging.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,2CAAyC;AAOzC,MAAM,sBAAsB,GAAmB;IAC7C,OAAO,EAAE,UAAU;IACnB,OAAO,EAAE,sBAAsB;CAChC,CAAC;AAEF,MAAa,OAAO;IACX,MAAM,CAAC,KAAK,CAAC,iCAAiC,CACnD,QAAmB,EACnB,IAAY,EACZ,EAAuB,EACvB,gBAAgC,sBAAsB;QAEtD,QAAQ,CAAC,SAAS,CAAC,SAAS,IAAI,gBAAgB,CAAC,CAAC;QAClD,MAAM,SAAS,GAAW,wBAAW,CAAC,GAAG,EAAE,CAAC;QAC5C,IAAI,mBAAmB,GAAW,aAAa,CAAC,OAAO,CAAC;QACxD,IAAI;YACF,MAAM,EAAE,EAAE,CAAC;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,mBAAmB,GAAG,aAAa,CAAC,OAAO,CAAC;YAC5C,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,MAAM,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,wBAAW,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;YACxE,QAAQ,CAAC,SAAS,CAAC,SAAS,IAAI,IAAI,mBAAmB,KAAK,aAAa,WAAW,CAAC,CAAC;SACvF;IACH,CAAC;CACF;AApBD,0BAoBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { ITerminal } from '@rushstack/node-core-library';\nimport { performance } from 'perf_hooks';\n\nexport interface IFinishedWords {\n  success: string;\n  failure: string;\n}\n\nconst DEFAULT_FINISHED_WORDS: IFinishedWords = {\n  success: 'finished',\n  failure: 'encountered an error'\n};\n\nexport class Logging {\n  public static async runFunctionWithLoggingBoundsAsync(\n    terminal: ITerminal,\n    name: string,\n    fn: () => Promise<void>,\n    finishedWords: IFinishedWords = DEFAULT_FINISHED_WORDS\n  ): Promise<void> {\n    terminal.writeLine(` ---- ${name} started ---- `);\n    const startTime: number = performance.now();\n    let finishedLoggingWord: string = finishedWords.success;\n    try {\n      await fn();\n    } catch (e) {\n      finishedLoggingWord = finishedWords.failure;\n      throw e;\n    } finally {\n      const executionTime: number = Math.round(performance.now() - startTime);\n      terminal.writeLine(` ---- ${name} ${finishedLoggingWord} (${executionTime}ms) ---- `);\n    }\n  }\n}\n"]}