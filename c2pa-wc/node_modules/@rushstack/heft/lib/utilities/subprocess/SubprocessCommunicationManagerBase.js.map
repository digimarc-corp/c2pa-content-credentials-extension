{"version":3,"file":"SubprocessCommunicationManagerBase.js","sourceRoot":"","sources":["../../../src/utilities/subprocess/SubprocessCommunicationManagerBase.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAa3D,MAAsB,kCAAkC;IAItD,IAAc,0BAA0B;QACtC,OAAO,IAAI,CAAC,2BAA2B,CAAC;IAC1C,CAAC;IAED,IAAc,uBAAuB;QACnC,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACvC,CAAC;IAEM,UAAU,CAAC,OAA6D;QAC7E,IAAI,CAAC,2BAA2B,GAAG,OAAO,CAAC,0BAA0B,CAAC;QACtE,IAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAClE,CAAC;IAEM,kBAAkB,CAAC,UAAqC;QAC7D,IAAI,CAAC,wBAAwB,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnE,CAAC;CAOF;AA1BD,gFA0BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as childProcess from 'child_process';\n\nimport { ISubprocessMessageBase } from './SubprocessCommunication';\n\nexport type SendMessageFunctionType = (message: ISubprocessMessageBase) => void;\n\nexport interface ISubprocessCommunicationManagerInitializationOptions {\n  sendMessageToParentProcess: SendMessageFunctionType;\n  sendMessageToSubprocess: SendMessageFunctionType;\n}\n\nexport abstract class SubprocessCommunicationManagerBase {\n  private _sendMessageToParentProcess!: SendMessageFunctionType;\n  private _sendMessageToSubprocess!: SendMessageFunctionType;\n\n  protected get sendMessageToParentProcess(): SendMessageFunctionType {\n    return this._sendMessageToParentProcess;\n  }\n\n  protected get sendMessageToSubprocess(): SendMessageFunctionType {\n    return this._sendMessageToSubprocess;\n  }\n\n  public initialize(options: ISubprocessCommunicationManagerInitializationOptions): void {\n    this._sendMessageToParentProcess = options.sendMessageToParentProcess;\n    this._sendMessageToSubprocess = options.sendMessageToSubprocess;\n  }\n\n  public registerSubprocess(subprocess: childProcess.ChildProcess): void {\n    this._sendMessageToSubprocess = subprocess.send.bind(subprocess);\n  }\n\n  public abstract canHandleMessageFromSubprocess(message: ISubprocessMessageBase): boolean;\n  public abstract receiveMessageFromSubprocess(message: ISubprocessMessageBase): void;\n\n  public abstract canHandleMessageFromParentProcess(message: ISubprocessMessageBase): boolean;\n  public abstract receiveMessageFromParentProcess(message: ISubprocessMessageBase): void;\n}\n"]}