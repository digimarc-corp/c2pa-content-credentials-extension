{"version":3,"file":"TypeScriptInternals.js","sourceRoot":"","sources":["../../../../src/plugins/TypeScriptPlugin/internalTypings/TypeScriptInternals.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type * as TTypescript from 'typescript';\n\n// The specifics of these types aren't important\n/**\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3969-L4010\n */\nexport interface IEmitResolver {}\n\n/**\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L5969-L5988\n */\nexport interface IEmitHost {\n  writeFile: TTypescript.WriteFileCallback;\n}\n\n/**\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3338-L3341\n */\nexport interface IEmitTransformers {}\n\nexport interface IExtendedProgram extends TTypescript.Program {\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3205\n   */\n  getSourceFiles(): ReadonlyArray<IExtendedSourceFile>;\n\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/program.ts#L1024-L1048\n   */\n  getCommonSourceDirectory(): string;\n}\nexport interface IExtendedSourceFile extends TTypescript.SourceFile {\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/types.ts#L3011\n   */\n  version: string;\n}\n\n/**\n * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L3799-L3803\n */\nexport interface IResolveModuleNameResolutionHost {\n  getCanonicalFileName(p: string): string;\n  getCommonSourceDirectory(): string;\n  getCurrentDirectory(): string;\n}\n\nexport interface IExtendedTypeScript {\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L3\n   */\n  performance: {\n    /**\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L110-L116\n     */\n    enable(): void;\n\n    /**\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L55-L61\n     */\n    mark(performanceMaker: string): void;\n\n    /**\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L72-L78\n     */\n    measure(measureName: string, startMarkName?: string, endMarkName?: string): void;\n\n    /**\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L94-L96\n     */\n    getDuration(measureName: string): number;\n\n    /**\n     * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/performance.ts#L85-L87\n     */\n    getCount(measureName: string): number;\n  };\n\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L4720-L4734\n   */\n  readJson(filePath: string): object;\n\n  /**\n   * https://github.com/microsoft/TypeScript/blob/782c09d783e006a697b4ba6d1e7ec2f718ce8393/src/compiler/utilities.ts#L6540\n   */\n  matchFiles(\n    path: string,\n    extensions: ReadonlyArray<string> | undefined,\n    excludes: ReadonlyArray<string> | undefined,\n    includes: ReadonlyArray<string> | undefined,\n    useCaseSensitiveFileNames: boolean,\n    currentDirectory: string,\n    depth: number | undefined,\n    getFileSystemEntries: (path: string) => {\n      readonly files: ReadonlyArray<string>;\n      readonly directories: ReadonlyArray<string>;\n    },\n    realpath: (path: string) => string,\n    directoryExists: (path: string) => boolean\n  ): string[];\n\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/emitter.ts#L261-L614\n   */\n  emitFiles(\n    resolver: IEmitResolver,\n    host: IEmitHost,\n    targetSourceFile: TTypescript.SourceFile | undefined,\n    emitTransformers: IEmitTransformers,\n    emitOnlyDtsFiles?: boolean,\n    onlyBuildInfo?: boolean,\n    forceDtsEmit?: boolean\n  ): TTypescript.EmitResult;\n\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/transformer.ts#L30-L35\n   */\n  getTransformers(\n    compilerOptions: TTypescript.CompilerOptions,\n    customTransformers?: TTypescript.CustomTransformers,\n    emitOnlyDtsFiles?: boolean\n  ): IEmitTransformers;\n\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L6100-L6108\n   */\n  removeFileExtension(path: string): string;\n\n  /**\n   * https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/utilities.ts#L3826-L3833\n   */\n  getExternalModuleNameFromPath(\n    host: IResolveModuleNameResolutionHost,\n    fileName: string,\n    referencePath?: string\n  ): string;\n\n  Diagnostics: {\n    // https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/diagnosticMessages.json#L4252-L4255\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Found_1_error_Watching_for_file_changes: TTypescript.DiagnosticMessage;\n\n    // https://github.com/microsoft/TypeScript/blob/5f597e69b2e3b48d788cb548df40bcb703c8adb1/src/compiler/diagnosticMessages.json#L4256-L4259\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Found_0_errors_Watching_for_file_changes: TTypescript.DiagnosticMessage;\n\n    // https://github.com/microsoft/TypeScript/blob/2428ade1a91248e847f3e1561e31a9426650efee/src/compiler/diagnosticMessages.json#L2252\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor: TTypescript.DiagnosticMessage;\n\n    // https://github.com/microsoft/TypeScript/blob/2428ade1a91248e847f3e1561e31a9426650efee/src/compiler/diagnosticMessages.json#L4920\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1: TTypescript.DiagnosticMessage;\n  };\n}\n\nexport type ExtendedTypeScript = typeof TTypescript & IExtendedTypeScript;\n"]}