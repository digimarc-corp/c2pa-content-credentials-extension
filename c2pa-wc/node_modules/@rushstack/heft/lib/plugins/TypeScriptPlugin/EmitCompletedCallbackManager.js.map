{"version":3,"file":"EmitCompletedCallbackManager.js","sourceRoot":"","sources":["../../../src/plugins/TypeScriptPlugin/EmitCompletedCallbackManager.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,sHAAmH;AAGnH,MAAM,uCAAuC,GAAW,qCAAqC,CAAC;AAE9F,MAAa,4BAA6B,SAAQ,uEAAkC;IAGlF,YAAmB,QAAoB;QACrC,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,0BAA0B,CAAC,EAAE,IAAI,EAAE,uCAAuC,EAAE,CAAC,CAAC;IACrF,CAAC;IAEM,8BAA8B,CAAC,OAA+B;QACnE,OAAO,OAAO,CAAC,IAAI,KAAK,uCAAuC,CAAC;IAClE,CAAC;IAEM,4BAA4B,CAAC,OAA+B;QACjE,IAAI,OAAO,CAAC,IAAI,KAAK,uCAAuC,EAAE;YAC5D,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;IACH,CAAC;IAEM,iCAAiC,CAAC,OAA+B;QACtE,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,+BAA+B,CAAC,OAA+B,IAAS,CAAC;CACjF;AA5BD,oEA4BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { SubprocessCommunicationManagerBase } from '../../utilities/subprocess/SubprocessCommunicationManagerBase';\nimport { ISubprocessMessageBase } from '../../utilities/subprocess/SubprocessCommunication';\n\nconst EMIT_COMPLETED_CALLBACK_MANAGER_MESSAGE: string = 'emitCompletedCallbackManagerMessage';\n\nexport class EmitCompletedCallbackManager extends SubprocessCommunicationManagerBase {\n  private readonly _callback: () => void;\n\n  public constructor(callback: () => void) {\n    super();\n\n    this._callback = callback;\n  }\n\n  public callback(): void {\n    this.sendMessageToParentProcess({ type: EMIT_COMPLETED_CALLBACK_MANAGER_MESSAGE });\n  }\n\n  public canHandleMessageFromSubprocess(message: ISubprocessMessageBase): boolean {\n    return message.type === EMIT_COMPLETED_CALLBACK_MANAGER_MESSAGE;\n  }\n\n  public receiveMessageFromSubprocess(message: ISubprocessMessageBase): void {\n    if (message.type === EMIT_COMPLETED_CALLBACK_MANAGER_MESSAGE) {\n      this._callback();\n    }\n  }\n\n  public canHandleMessageFromParentProcess(message: ISubprocessMessageBase): boolean {\n    return false;\n  }\n\n  public receiveMessageFromParentProcess(message: ISubprocessMessageBase): void {}\n}\n"]}