{"version":3,"file":"svelte-docgen.js","sourceRoot":"","sources":["../../plugins/svelte-docgen.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Plugin } from 'vite';\nimport MagicString from 'magic-string';\nimport path from 'path';\nimport fs from 'fs';\nimport svelteDoc from 'sveltedoc-parser';\nimport type { SvelteParserOptions } from 'sveltedoc-parser';\nimport { logger } from '@storybook/node-logger';\nimport { preprocess } from 'svelte/compiler';\n\n// Most of the code here should probably be exported by @storybook/svelte and reused here.\n// See: https://github.com/storybookjs/storybook/blob/next/app/svelte/src/server/svelte-docgen-loader.ts\n\n// From https://github.com/sveltejs/svelte/blob/8db3e8d0297e052556f0b6dde310ef6e197b8d18/src/compiler/compile/utils/get_name_from_filename.ts\n// Copied because it is not exported from the compiler\nfunction getNameFromFilename(filename: string) {\n  if (!filename) return null;\n\n  const parts = filename.split(/[/\\\\]/).map(encodeURI);\n\n  if (parts.length > 1) {\n    const index_match = parts[parts.length - 1].match(/^index(\\.\\w+)/);\n    if (index_match) {\n      parts.pop();\n      parts[parts.length - 1] += index_match[1];\n    }\n  }\n\n  const base = parts\n    .pop()\n    ?.replace(/%/g, 'u')\n    .replace(/\\.[^.]+$/, '')\n    .replace(/[^a-zA-Z_$0-9]+/g, '_')\n    .replace(/^_/, '')\n    .replace(/_$/, '')\n    .replace(/^(\\d)/, '_$1');\n\n  if (!base) {\n    throw new Error(`Could not derive component name from file ${filename}`);\n  }\n\n  return base[0].toUpperCase() + base.slice(1);\n}\n\nexport function svelteDocgen(svelteOptions: Record<string, any>): Plugin {\n  const cwd = process.cwd();\n  const { preprocess: preprocessOptions, logDocgen = false } = svelteOptions;\n\n  return {\n    name: 'svelte-docgen',\n    async transform(src: string, id: string) {\n      if (/\\.(svelte)$/.test(id)) {\n        const resource = path.relative(cwd, id);\n\n        let docOptions;\n        if (preprocessOptions) {\n          const src = fs.readFileSync(resource).toString();\n\n          const { code: fileContent } = await preprocess(src, preprocessOptions, { filename: resource });\n\n          docOptions = {\n            fileContent,\n          };\n        } else {\n          docOptions = { filename: resource };\n        }\n\n        // set SvelteDoc options\n        const options: SvelteParserOptions = {\n          ...docOptions,\n          version: 3,\n        };\n\n        const s = new MagicString(src);\n\n        try {\n          const componentDoc = await svelteDoc.parse(options);\n          // get filename for source content\n          const file = path.basename(resource);\n\n          componentDoc.name = path.basename(file);\n\n          const componentName = getNameFromFilename(resource);\n          s.append(`;${componentName}.__docgen = ${JSON.stringify(componentDoc)}`);\n        } catch (error: any) {\n          if (logDocgen) {\n            logger.error(error);\n          }\n        }\n\n        return {\n          code: s.toString(),\n          map: s.generateMap({ hires: true, source: id }),\n        };\n      }\n    },\n  };\n}\n"]}