{"version":3,"file":"vite-server.js","sourceRoot":"","sources":["../vite-server.ts"],"names":[],"mappings":";;;AAAA,+BAAoC;AACpC,iCAA8C;AAC9C,iDAAiD;AACjD,+CAA6C;AAKtC,KAAK,UAAU,gBAAgB,CAAC,OAAwB,EAAE,SAAiB;IAChF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAElC,MAAM,UAAU,GAAG,MAAM,IAAA,0BAAY,EAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IAC9D,MAAM,aAAa,GAAG;QACpB,GAAG,UAAU;QACb,MAAM,EAAE;YACN,cAAc,EAAE,IAAI;YACpB,GAAG,EAAE;gBACH,IAAI;gBACJ,MAAM,EAAE,SAAS;aAClB;YACD,EAAE,EAAE;gBACF,MAAM,EAAE,IAAI;aACb;SACF;QACD,OAAO,EAAE,QAAiB;QAC1B,YAAY,EAAE,MAAM,IAAA,8BAAe,EAAC,UAAU,EAAE,OAAO,CAAC;KACzD,CAAC;IAEF,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAE7E,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,KAAK,CAAmB,KAAK,CAAC,CAAC;IAC7D,0EAA0E;IAC1E,MAAM,IAAI,GAAG,IAAA,2BAAoB,EAAC,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;IAClE,kBAAkB;IAClB,WAAW,CAAC,MAAM,GAAG;QACnB,GAAG,WAAW,CAAC,MAAM;QACrB,GAAG,IAAI;KACR,CAAC;IAEF,OAAO,IAAA,mBAAY,EAAC,WAAW,CAAC,CAAC;AACnC,CAAC;AAhCD,4CAgCC","sourcesContent":["import { createServer } from 'vite';\nimport { stringifyProcessEnvs } from './envs';\nimport { getOptimizeDeps } from './optimizeDeps';\nimport { commonConfig } from './vite-config';\n\nimport type { Server } from 'http';\nimport type { EnvsRaw, ExtendedOptions } from './types';\n\nexport async function createViteServer(options: ExtendedOptions, devServer: Server) {\n  const { port, presets } = options;\n\n  const baseConfig = await commonConfig(options, 'development');\n  const defaultConfig = {\n    ...baseConfig,\n    server: {\n      middlewareMode: true,\n      hmr: {\n        port,\n        server: devServer,\n      },\n      fs: {\n        strict: true,\n      },\n    },\n    appType: 'custom' as const,\n    optimizeDeps: await getOptimizeDeps(baseConfig, options),\n  };\n\n  const finalConfig = await presets.apply('viteFinal', defaultConfig, options);\n\n  const envsRaw = await presets.apply<Promise<EnvsRaw>>('env');\n  // Stringify env variables after getting `envPrefix` from the final config\n  const envs = stringifyProcessEnvs(envsRaw, finalConfig.envPrefix);\n  // Update `define`\n  finalConfig.define = {\n    ...finalConfig.define,\n    ...envs,\n  };\n\n  return createServer(finalConfig);\n}\n"]}