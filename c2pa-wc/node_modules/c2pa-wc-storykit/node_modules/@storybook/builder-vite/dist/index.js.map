{"version":3,"file":"index.js","sourceRoot":"","sources":["../index.ts"],"names":[],"mappings":";AAAA,qCAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;AAErC,uCAAyB;AACzB,2CAA6B;AAC7B,mEAA8D;AAC9D,+CAAiD;AACjD,mCAA6C;AAkB7C,SAAS,gBAAgB,CAAC,OAAwB,EAAE,MAAqB;IACvE,OAAO,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QAC9B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,uBAAuB,CAAC,EAAE;YAC3C,IAAI,EAAE,CAAC;YACP,OAAO;SACR;QAED,yIAAyI;QACzI,2CAA2C;QAC3C,IAAI,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;YACzC,IAAI,EAAE,CAAC;YACP,OAAO;SACR;QAED,MAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,CAAC;QAClG,MAAM,SAAS,GAAG,MAAM,IAAA,2CAAmB,EAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAChE,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,kBAAkB,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QAC/E,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QAC3C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC,CAAC;AACJ,CAAC;AAEM,MAAM,KAAK,GAAyB,KAAK,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE;IACrG,MAAM,MAAM,GAAG,MAAM,IAAA,8BAAgB,EAAC,OAA0B,EAAE,SAAS,CAAC,CAAC;IAE7E,kHAAkH;IAClH,0HAA0H;IAC1H,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;QACtD,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;QACxC,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,CAAC,MAAM,gBAAgB,CAAC,OAA0B,EAAE,MAAM,CAAC,CAAC,CAAC;IACvE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAE/B,KAAK,UAAU,IAAI,CAAC,CAAS;QAC3B,IAAI;YACF,OAAO,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;SAC7B;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;SAC7C;QAED,MAAM,CAAC,CAAC;IACV,CAAC;IAED,OAAO;QACL,IAAI;QACJ,KAAK,EAAE,IAAI;QACX,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;KACrC,CAAC;AACJ,CAAC,CAAC;AA5BW,QAAA,KAAK,SA4BhB;AAEK,MAAM,KAAK,GAAyB,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;IAC/D,OAAO,IAAA,aAAS,EAAC,OAA0B,CAAC,CAAC;AAC/C,CAAC,CAAC;AAFW,QAAA,KAAK,SAEhB;AAEW,QAAA,WAAW,GAAG,EAAE,CAAC;AACjB,QAAA,cAAc,GAAG,EAAE,CAAC","sourcesContent":["// noinspection JSUnusedGlobalSymbols\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { transformIframeHtml } from './transform-iframe-html';\nimport { createViteServer } from './vite-server';\nimport { build as viteBuild } from './build';\n\nimport type { Builder, StorybookConfig, Options } from '@storybook/core-common';\nimport type { RequestHandler, Request, Response } from 'express';\nimport type { InlineConfig, UserConfig, ViteDevServer } from 'vite';\nimport type { ExtendedOptions } from './types';\n\n// Storybook's Stats are optional Webpack related property\nexport type ViteStats = null;\n\nexport type ViteBuilder = Builder<UserConfig, ViteStats>;\n\nexport type ViteFinal = (config: InlineConfig, options: Options) => InlineConfig | Promise<InlineConfig>;\n\nexport type StorybookViteConfig = StorybookConfig & {\n  viteFinal: ViteFinal;\n};\n\nfunction iframeMiddleware(options: ExtendedOptions, server: ViteDevServer): RequestHandler {\n  return async (req, res, next) => {\n    if (!req.url.match(/^\\/iframe\\.html($|\\?)/)) {\n      next();\n      return;\n    }\n\n    // We need to handle `html-proxy` params for style tag HMR https://github.com/storybookjs/builder-vite/issues/266#issuecomment-1055677865\n    // e.g. /iframe.html?html-proxy&index=0.css\n    if (req.query['html-proxy'] !== undefined) {\n      next();\n      return;\n    }\n\n    const indexHtml = fs.readFileSync(path.resolve(__dirname, '..', 'input', 'iframe.html'), 'utf-8');\n    const generated = await transformIframeHtml(indexHtml, options);\n    const transformed = await server.transformIndexHtml('/iframe.html', generated);\n    res.setHeader('Content-Type', 'text/html');\n    res.status(200).send(transformed);\n  };\n}\n\nexport const start: ViteBuilder['start'] = async ({ startTime, options, router, server: devServer }) => {\n  const server = await createViteServer(options as ExtendedOptions, devServer);\n\n  // Just mock this endpoint (which is really Webpack-specific) so we don't get spammed with 404 in browser devtools\n  // TODO: we should either show some sort of progress from Vite, or just try to disable the whole Loader in the Manager UI.\n  router.get('/progress', (req: Request, res: Response) => {\n    res.header('Cache-Control', 'no-cache');\n    res.header('Content-Type', 'text/event-stream');\n  });\n\n  router.use(await iframeMiddleware(options as ExtendedOptions, server));\n  router.use(server.middlewares);\n\n  async function bail(e?: Error): Promise<void> {\n    try {\n      return await server.close();\n    } catch (err) {\n      console.warn('unable to close vite server');\n    }\n\n    throw e;\n  }\n\n  return {\n    bail,\n    stats: null,\n    totalTime: process.hrtime(startTime),\n  };\n};\n\nexport const build: ViteBuilder['build'] = async ({ options }) => {\n  return viteBuild(options as ExtendedOptions);\n};\n\nexport const corePresets = [];\nexport const previewPresets = [];\n"]}