{"version":3,"file":"transform-iframe-html.js","sourceRoot":"","sources":["../transform-iframe-html.ts"],"names":[],"mappings":";;;AAAA,wDAA0D;AAMnD,KAAK,UAAU,mBAAmB,CAAC,IAAY,EAAE,OAAwB;IAC9E,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;IACtF,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,KAAK,CAAc,aAAa,CAAC,CAAC;IACxE,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,KAAK,CAAc,aAAa,CAAC,CAAC;IACxE,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IAC5D,MAAM,gBAAgB,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,SAAS,EAAE,EAAE,CAAC,CAAC;IACxE,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,KAAK,CAAa,MAAM,CAAC,CAAC;IAC5D,MAAM,OAAO,GAAG,IAAA,8BAAgB,EAAC,MAAM,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE;QACpF,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,UAAU,EAAE,OAAO,CAAC,GAAG,EAAE;KAC1B,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACrB,GAAG,SAAS;QACZ,iBAAiB,EAAE,SAAS,CAAC,iBAAiB,CAAC,MAAM;KACtD,CAAC,CAAC,CAAC;IAEJ,OAAO,IAAI;SACR,OAAO,CAAC,uBAAuB,EAAE,KAAK,IAAI,WAAW,CAAC;SACtD,OAAO,CAAC,oBAAoB,EAAE,UAAU,IAAI,EAAE,CAAC;SAC/C,OAAO,CAAC,iBAAiB,EAAE,QAAQ,IAAI,EAAE,CAAC;SAC1C,OAAO,CAAC,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;SAC7E,OAAO,CACN,0BAA0B,EAC1B,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAC5F;SACA,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;SAC5D,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;SAC1D,OAAO,CAAC,6BAA6B,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;SACxE,OAAO,CAAC,mCAAmC,EAAE,eAAe,IAAI,EAAE,CAAC;SACnE,OAAO,CAAC,mCAAmC,EAAE,eAAe,IAAI,EAAE,CAAC,CAAC;AACzE,CAAC;AA7BD,kDA6BC","sourcesContent":["import { normalizeStories } from '@storybook/core-common';\nimport type { CoreConfig } from '@storybook/core-common';\nimport type { ExtendedOptions } from './types';\n\nexport type PreviewHtml = string | undefined;\n\nexport async function transformIframeHtml(html: string, options: ExtendedOptions) {\n  const { configType, features, framework, presets, serverChannelUrl, title } = options;\n  const headHtmlSnippet = await presets.apply<PreviewHtml>('previewHead');\n  const bodyHtmlSnippet = await presets.apply<PreviewHtml>('previewBody');\n  const logLevel = await presets.apply('logLevel', undefined);\n  const frameworkOptions = await presets.apply(`${framework}Options`, {});\n  const coreOptions = await presets.apply<CoreConfig>('core');\n  const stories = normalizeStories(await options.presets.apply('stories', [], options), {\n    configDir: options.configDir,\n    workingDir: process.cwd(),\n  }).map((specifier) => ({\n    ...specifier,\n    importPathMatcher: specifier.importPathMatcher.source,\n  }));\n\n  return html\n    .replace('<!-- [TITLE HERE] -->', title || 'Storybook')\n    .replace('[CONFIG_TYPE HERE]', configType || '')\n    .replace('[LOGLEVEL HERE]', logLevel || '')\n    .replace(`'[FRAMEWORK_OPTIONS HERE]'`, JSON.stringify(frameworkOptions || {}))\n    .replace(\n      `'[CHANNEL_OPTIONS HERE]'`,\n      JSON.stringify(coreOptions && coreOptions.channelOptions ? coreOptions.channelOptions : {})\n    )\n    .replace(`'[FEATURES HERE]'`, JSON.stringify(features || {}))\n    .replace(`'[STORIES HERE]'`, JSON.stringify(stories || {}))\n    .replace(`'[SERVER_CHANNEL_URL HERE]'`, JSON.stringify(serverChannelUrl))\n    .replace('<!-- [HEAD HTML SNIPPET HERE] -->', headHtmlSnippet || '')\n    .replace('<!-- [BODY HTML SNIPPET HERE] -->', bodyHtmlSnippet || '');\n}\n"]}