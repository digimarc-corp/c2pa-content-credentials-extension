"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const svelte_stories_loader_1 = require("@storybook/addon-svelte-csf/dist/cjs/parser/svelte-stories-loader");
const fs_1 = require("fs");
const extract_stories_1 = require("@storybook/addon-svelte-csf/dist/cjs/parser/extract-stories");
const parser = require.resolve('@storybook/addon-svelte-csf/dist/esm/parser/collect-stories').replace(/[/\\]/g, '/');
const svelte = __importStar(require("svelte/compiler"));
const magic_string_1 = __importDefault(require("magic-string"));
function csfPlugin(svelteOptions) {
    return {
        name: 'storybook-addon-svelte-csf',
        enforce: 'post',
        async transform(code, id) {
            if (/\.stories\.svelte$/.test(id)) {
                const s = new magic_string_1.default(code);
                const component = (0, svelte_stories_loader_1.getNameFromFilename)(id);
                let source = (0, fs_1.readFileSync)(id).toString();
                if (svelteOptions && svelteOptions.preprocess) {
                    source = (await svelte.preprocess(source, svelteOptions.preprocess, { filename: id })).code;
                }
                const all = (0, extract_stories_1.extractStories)(source);
                const { stories } = all;
                const storyDef = Object.entries(stories)
                    .filter(([, def]) => !def.template)
                    .map(([id]) => `export const ${id} = __storiesMetaData.stories[${JSON.stringify(id)}];`)
                    .join('\n');
                s.replace('export default', '// export default');
                const namedExportsOrder = Object.entries(stories)
                    .filter(([, def]) => !def.template)
                    .map(([id]) => id);
                const output = [
                    '',
                    `import parser from '${parser}';`,
                    `const __storiesMetaData = parser(${component}, ${JSON.stringify(all)});`,
                    'export default __storiesMetaData.meta;',
                    `export const __namedExportsOrder = ${JSON.stringify(namedExportsOrder)};`,
                    storyDef,
                ].join('\n');
                s.append(output);
                return {
                    code: s.toString(),
                    map: s.generateMap({ hires: true, source: id }),
                };
            }
        },
    };
}
exports.default = csfPlugin;
//# sourceMappingURL=csf-plugin.js.map