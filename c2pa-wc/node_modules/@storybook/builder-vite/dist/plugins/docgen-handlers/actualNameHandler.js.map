{"version":3,"file":"actualNameHandler.js","sourceRoot":"","sources":["../../../plugins/docgen-handlers/actualNameHandler.ts"],"names":[],"mappings":";AAAA;;;;;;;;;GASG;;AAEH,yCAA4C;AAE5C,mDAAgF;AAMhF,SAAwB,iBAAiB,CAAC,aAA4B,EAAE,IAAc,EAAE,QAAkB;IACxG,IAAI,sBAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,sBAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QACjF,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,IAAA,sBAAc,EAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjE;SAAM,IACL,sBAAC,CAAC,uBAAuB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1C,sBAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;QACrC,IAAA,6BAAqB,EAAC,IAAI,EAAE,QAAQ,CAAC,EACrC;QACA,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,OAAO,WAAW,CAAC,MAAM,EAAE;YACzB,IAAI,sBAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACvD,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,IAAA,sBAAc,EAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9E,OAAO;aACR;iBAAM,IAAI,sBAAC,CAAC,oBAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAChE,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAChD,IAAI,sBAAC,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,sBAAC,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBACvE,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,IAAA,sBAAc,EAAC,QAAQ,CAAC,CAAC,CAAC;oBAC1D,OAAO;iBACR;aACF;YACD,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SAClC;QACD,gCAAgC;QAChC,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;KACrC;IACD,OAAO;AACT,CAAC;AA1BD,oCA0BC","sourcesContent":["/**\n * This is heavily based on the react-docgen `displayNameHandler`\n * (https://github.com/reactjs/react-docgen/blob/26c90c0dd105bf83499a83826f2a6ff7a724620d/src/handlers/displayNameHandler.ts)\n * but instead defines an `actualName` property on the generated docs that is taken first from the component's actual name.\n * This addresses an issue where the name that the generated docs are stored under is incorrectly named with the `displayName`\n * and not the component's actual name.\n *\n * This is inspired by `actualNameHandler` from https://github.com/storybookjs/babel-plugin-react-docgen, but is modified\n * directly from displayNameHandler, using the same approach as babel-plugin-react-docgen.\n */\n\nimport { namedTypes as t } from 'ast-types';\nimport type { NodePath } from 'ast-types/lib/node-path';\nimport { getNameOrValue, isReactForwardRefCall } from 'react-docgen/dist/utils';\n// import { getNameOrValue, isReactForwardRefCall } from 'react-docgen/lib/utils';\nimport type { Importer } from 'react-docgen/dist/parse';\n// import type { Importer } from 'react-docgen/lib/parse';\nimport type Documentation from 'react-docgen/lib/Documentation';\n\nexport default function actualNameHandler(documentation: Documentation, path: NodePath, importer: Importer): void {\n  if (t.ClassDeclaration.check(path.node) || t.FunctionDeclaration.check(path.node)) {\n    documentation.set('actualName', getNameOrValue(path.get('id')));\n  } else if (\n    t.ArrowFunctionExpression.check(path.node) ||\n    t.FunctionExpression.check(path.node) ||\n    isReactForwardRefCall(path, importer)\n  ) {\n    let currentPath = path;\n    while (currentPath.parent) {\n      if (t.VariableDeclarator.check(currentPath.parent.node)) {\n        documentation.set('actualName', getNameOrValue(currentPath.parent.get('id')));\n        return;\n      } else if (t.AssignmentExpression.check(currentPath.parent.node)) {\n        const leftPath = currentPath.parent.get('left');\n        if (t.Identifier.check(leftPath.node) || t.Literal.check(leftPath.node)) {\n          documentation.set('actualName', getNameOrValue(leftPath));\n          return;\n        }\n      }\n      currentPath = currentPath.parent;\n    }\n    // Could not find an actual name\n    documentation.set('actualName', '');\n  }\n  return;\n}\n"]}