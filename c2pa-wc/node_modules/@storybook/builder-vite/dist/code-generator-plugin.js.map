{"version":3,"file":"code-generator-plugin.js","sourceRoot":"","sources":["../code-generator-plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { mergeConfig } from 'vite';\nimport { transformIframeHtml } from './transform-iframe-html';\nimport { generateIframeScriptCode } from './codegen-iframe-script';\nimport { generateModernIframeScriptCode } from './codegen-modern-iframe-script';\nimport { generateImportFnScriptCode } from './codegen-importfn-script';\nimport { generateVirtualStoryEntryCode, generatePreviewEntryCode } from './codegen-entries';\nimport { generateAddonSetupCode } from './codegen-set-addon-channel';\n\nimport type { Plugin } from 'vite';\nimport type { ExtendedOptions } from './types';\n\nimport { virtualAddonSetupFile, virtualFileId, virtualPreviewFile, virtualStoriesFile } from './virtual-file-names';\n\nexport function codeGeneratorPlugin(options: ExtendedOptions): Plugin {\n  const iframePath = path.resolve(__dirname, '..', 'input', 'iframe.html');\n  let iframeId: string;\n\n  // noinspection JSUnusedGlobalSymbols\n  return {\n    name: 'storybook-vite-code-generator-plugin',\n    enforce: 'pre',\n    configureServer(server) {\n      // invalidate the whole vite-app.js script on every file change.\n      // (this might be a little too aggressive?)\n      server.watcher.on('change', () => {\n        const appModule = server.moduleGraph.getModuleById(virtualFileId);\n        if (appModule) {\n          server.moduleGraph.invalidateModule(appModule);\n        }\n        const storiesModule = server.moduleGraph.getModuleById(virtualStoriesFile);\n        if (storiesModule) {\n          server.moduleGraph.invalidateModule(storiesModule);\n        }\n      });\n\n      // Adding new story files is not covered by the change event above. So we need to detect this and trigger\n      // HMR to update the importFn.\n      server.watcher.on('add', (path) => {\n        // TODO maybe use the stories declaration in main\n        if (/\\.stories\\.([tj])sx?$/.test(path) || /\\.(story|stories).mdx$/.test(path)) {\n          // We need to emit a change event to trigger HMR\n          server.watcher.emit('change', virtualStoriesFile);\n        }\n      });\n    },\n    config(config, { command }) {\n      // If we are building the static distribution, add iframe.html as an entry.\n      // In development mode, it's not an entry - instead, we use an express middleware\n      // to serve iframe.html. The reason is that Vite's dev server (at the time of writing)\n      // does not support virtual files as entry points.\n      if (command === 'build') {\n        if (!config.build) {\n          config.build = {};\n        }\n        config.build.rollupOptions = {\n          ...config.build.rollupOptions,\n          input: iframePath,\n        };\n      }\n\n      // Detect if react 18 is installed.  If not, alias it to a virtual placeholder file.\n      try {\n        require.resolve('react-dom/client', { paths: [config.root || process.cwd()] });\n      } catch (e) {\n        if (isNodeError(e) && e.code === 'MODULE_NOT_FOUND') {\n          config.resolve = mergeConfig(config.resolve ?? {}, {\n            alias: {\n              'react-dom/client': path.resolve(__dirname, '..', 'input', 'react-dom-client-placeholder.js'),\n            },\n          });\n        }\n      }\n    },\n    configResolved(config) {\n      iframeId = `${config.root}/iframe.html`;\n    },\n    resolveId(source) {\n      if (source === virtualFileId) {\n        return virtualFileId;\n      } else if (source === iframePath) {\n        return iframeId;\n      } else if (source === virtualStoriesFile) {\n        return virtualStoriesFile;\n      } else if (source === virtualPreviewFile) {\n        return virtualPreviewFile;\n      } else if (source === virtualAddonSetupFile) {\n        return virtualAddonSetupFile;\n      }\n    },\n    async load(id) {\n      const storyStoreV7 = options.features?.storyStoreV7;\n      if (id === virtualStoriesFile) {\n        if (storyStoreV7) {\n          return generateImportFnScriptCode(options);\n        } else {\n          return generateVirtualStoryEntryCode(options);\n        }\n      }\n\n      if (id === virtualAddonSetupFile) {\n        return generateAddonSetupCode();\n      }\n\n      if (id === virtualPreviewFile && !storyStoreV7) {\n        return generatePreviewEntryCode(options);\n      }\n\n      if (id === virtualFileId) {\n        if (storyStoreV7) {\n          return generateModernIframeScriptCode(options);\n        } else {\n          return generateIframeScriptCode(options);\n        }\n      }\n\n      if (id === iframeId) {\n        return fs.readFileSync(path.resolve(__dirname, '..', 'input', 'iframe.html'), 'utf-8');\n      }\n    },\n    async transformIndexHtml(html, ctx) {\n      if (ctx.path !== '/iframe.html') {\n        return;\n      }\n      return transformIframeHtml(html, options);\n    },\n  };\n}\n\n// Refines an error received from 'catch' to be a NodeJS exception\nconst isNodeError = (error: unknown): error is NodeJS.ErrnoException => error instanceof Error;\n"]}